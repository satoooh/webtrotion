---
import * as interfaces from "../../lib/interfaces.ts";
import { getNotionColorToTailwindColor } from "../../lib/style-helpers.ts";
import RichText from "./RichText.astro";
import NotionBlocks from "../NotionBlocks.astro";

export interface Props {
	block: interfaces.Block;
	headings: interfaces.Block[];
	renderChildren?: boolean;
	setId?: boolean;
}

const { block, headings, renderChildren = true, setId = true } = Astro.props;

const hasChildren = block.Paragraph.Children && block.Paragraph.Children.length > 0;
const Tag = hasChildren && renderChildren ? "div" : "p";
---

<Tag
	class={`${getNotionColorToTailwindColor(block.Paragraph.Color)} my-4 min-h-7 text-[1.05rem] leading-[2.05] tracking-[0.025em] text-textColor`}
	id={setId ? block.Id : undefined}
>
	{block.Paragraph.RichTexts.map((richText) => <RichText richText={richText} blockID={block.Id} />)}
	{block.Paragraph.RichTexts.length === 0 && <br />}
	{
		hasChildren && renderChildren && (
			<div class="pl-6">
				<NotionBlocks
					blocks={block.Paragraph.Children}
					headings={headings}
					setId={setId}
					renderChildren={renderChildren}
				/>
			</div>
		)
	}
</Tag>

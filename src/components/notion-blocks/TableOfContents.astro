---
import * as interfaces from "../../lib/interfaces.ts";
import { buildHeadingId } from "../../lib/blog-helpers.ts";
import { getNotionColorToTailwindColor } from "../../lib/style-helpers.ts";

export interface Props {
	block: interfaces.Block;
	headings: interfaces.Block[];
	setId?: boolean;
}

const { block, headings, setId = true } = Astro.props;
---

<div class="table-of-contents" id={setId ? block.Id : undefined}>
	{
		headings.map((headingBlock: interfaces.Block) => {
			const heading = headingBlock.Heading1 || headingBlock.Heading2 || headingBlock.Heading3;
			const headingText = heading.RichTexts.map(
				(richText: interfaces.RichText) => richText.PlainText,
			).join("");
			const headingId = buildHeadingId(heading);

			let indentClass = "";
			if (headingBlock.Type === "heading_2") {
				indentClass = "pl-6";
			} else if (headingBlock.Type === "heading_3") {
				indentClass = "pl-12";
			}

			return (
				<a
					href={`#${headingId}`}
					class={`table-of-contents block leading-7 hover:font-bold ${getNotionColorToTailwindColor(
						block.TableOfContents.Color,
					)} ${indentClass}`}
					aria-label={`Jump to section: ${headingText}`}
				>
					{headingText}
				</a>
			);
		})
	}
</div>
